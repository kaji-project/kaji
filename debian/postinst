#!/bin/bash
#DEBHELPER#

set -e

. /usr/share/debconf/confmodule

case "$1" in
  configure)

    # Git init /etc/shinken
    if [ ! -x /etc/shinken/.git ]
    then
        chown -R shinken:shinken /etc/shinken/
        usermod -s /bin/bash shinken
        usermod -G shinken www-data
        chgrp -R www-data /etc/shinken
        chmod -R g+w /etc/shinken
        cd /etc/shinken/
        #usermod -s /bin/bash www-data
        echo "[user]" > /var/www/.gitconfig
        echo "        email = adagios@kaji-project.org" >> /var/www/.gitconfig
        echo "        name = Adagios" >> /var/www/.gitconfig
        su shinken -c 'git config --global user.email "shinken@kaji-project.org"'
        su shinken -c 'git config --global user.name "shinken"'
        su shinken -c 'git init'
        su shinken -c 'git add .'
        su shinken -c 'git commit -a -m "Initial Kaji installation commit"'
    fi
    a2enmod proxy
    a2enmod proxy_http
    a2ensite influxdb

    service apache2 restart || echo "Failed to restart Apache2. You have to restart Apache2 to update its configuration"
    service shinken restart || echo "Failed to restart Shinken. You have to restart Shinken to update its configuration"
    service influxdb restart || echo "Failed to restart Influxdb. You have to restart Shinken to update its configuration"
    service apache2 reload || echo "Failed to reload Apache2. You have to restart Apache2 to update its configuration"
    # Create influx dbs and users
    # Shinken
    curl -X GET 'http://172.17.0.11:8086/db?u=root&p=root' 2> /dev/null |grep shinken > /dev/null
    if [ $? -ne 0 ]
    # shinken db doesn't exist
    then
        # create Shinken database
        curl -X POST 'http://localhost:8086/db?u=root&p=root' -d '{"name": "shinken"}'
        ## kaji user
        curl -X POST 'http://localhost:8086/db/shinken/users?u=root&p=root' -d '{"name": "kaji", "password": "kaji"}'
        ### Set kaji user as reader only
        curl -X POST 'http://localhost:8086/db/shinken/users/shinken?u=root&p=root' -d '{ "readFrom": ".*", "writeTo": "^$" }'
        ## Shinken user
        curl -X POST 'http://localhost:8086/db/shinken/users?u=root&p=root' -d '{"name": "shinken", "password": "shinken"}'
        ## Set shinken user as writer only
        curl -X POST 'http://localhost:8086/db/shinken/users/shinken?u=root&p=root' -d '{ "readFrom": "^$", "writeTo": ".*" }'
    fi
    # Grafana
    curl -X GET 'http://172.17.0.11:8086/db?u=root&p=root' 2> /dev/null |grep grafana > /dev/null
    if [ $? -ne 0 ]
    # grafana db doesn't exist
    then
        # create Grafana database
        curl -X POST 'http://localhost:8086/db?u=root&p=root' -d '{"name": "grafanashinken"}' # add database user
        ## grafana user
        curl -X POST 'http://localhost:8086/db/grafana/users?u=root&p=root' -d '{"name": "grafana", "password": "grafana"}'
    fi

    echo
    echo "Kaji install finished"
    echo
    ;;
  abort-upgrade)
    # Back out of an attempt to upgrade this package FROM THIS VERSION
    # to version $2.  Undo the effects of "prerm upgrade $2".
    :

    ;;
  abort-remove)
    if test "$2" != in-favour; then
      echo "$0: undocumented call to \`postinst $*'" 1>&2
      exit 0
    fi
    # Back out of an attempt to remove this package, which was due to
    # a conflict with package $3 (version $4).  Undo the effects of
    # "prerm remove in-favour $3 $4".
    :

    ;;
  abort-deconfigure)
    if test "$2" != in-favour -o "$5" != removing; then
      echo "$0: undocumented call to \`postinst $*'" 1>&2
      exit 0
    fi
    # Back out of an attempt to deconfigure this package, which was
    # due to package $6 (version $7) which we depend on being removed
    # to make way for package $3 (version $4).  Undo the effects of
    # "prerm deconfigure in-favour $3 $4 removing $6 $7".
    :

    ;;
  *) echo "$0: didn't understand being called with \`$1'" 1>&2
     exit 0;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.
#DEBHELPER#

exit 0

